// in scalacollider-swing

val onsets = Map(
1 -> Vector((23039,5), (37887,5), (53247,5), (113151,3), (123391,1)),
2 -> Vector((28159,4), (35327,5), (44543,0), (61439,5), (74239,5), (86527,4), (114175,1)),
3 -> Vector((137727,5), (223743,2), (230399,0), (239615,1), (262655,1), (270335,2), (299519,1)),
4 -> Vector((9215,5), (17407,5), (59391,0), (144383,5), (249343,4)),
6 -> Vector((10751,0), (16895,3), (39423,0), (47615,5), (73727,0), (79871,5), (102399,3), (111103,5), (140287,0), (160255,0), (176127,5), (192511,0), (206335,5), (238591,5), (271871,5), (287743,2), (303103,5), (318463,2), (334335,5), (350207,3), (366079,5), (380415,0)),
7 -> Vector((13311,5), (19455,2), (31231,4), (37375,4), (44543,3), (50687,0), (66559,5), (75263,2), (86527,5), (95743,1), (119295,5), (140287,1), (160255,0), (167423,1), (173055,1), (182271,2), (189439,1), (197119,5), (206335,3), (218111,5), (254463,0), (273407,1), (280063,0), (286207,1), (293375,1), (308223,0), (319999,2), (347647,2), (359423,5), (395263,1), (410623,3), (417791,5), (429567,2), (445439,5), (462335,5), (468479,1), (491007,3), (499711,0), (514047,2), (523775,1), (533503,5), (540159,5), (547327,4), (563711,2), (572927,5), (578559,1), (590335,0), (598015,5), (607231,1), (617471,2), (627711,5), (633343,5), (644095,0), (660991,4), (668159,5), (684543,5), (698879,2), (708607,5), (722431,0), (732671,4), (740863,2), (760319,4)),
8 -> Vector((17919,4), (27647,4), (34303,1), (47615,1), (54783,1), (69631,4), (80895,2), (95231,4), (115199,2), (121343,0), (128511,4), (134655,3), (145919,4), (160767,0), (176639,1), (185855,5), (193023,0), (198655,5), (207871,5), (223743,3), (235007,1), (244223,1), (250367,2), (256511,0), (274943,3), (282111,5), (288767,0), (297471,5), (304127,0), (310271,2), (328703,1), (338943,3), (351231,3), (356863,5), (364031,1), (385535,5), (392191,3), (404479,3), (410111,5), (419327,4), (429567,0), (437759,2), (455167,3), (467967,4), (475647,0), (485887,1), (492543,4), (508415,4), (524799,5), (549887,3), (564223,3), (572927,4), (584703,0), (592383,5), (617471,4), (628735,0), (642047,1), (649215,5), (660991,0), (671231,2), (687103,1), (696831,5), (706559,3), (722943,4), (733183,1), (740863,2), (749567,2), (756735,3), (762879,5), (774655,5), (799743,1), (809471,5), (820223,4), (828415,1), (846335,2), (855551,5), (863743,0), (875007,2), (881663,4), (887295,0), (895487,0), (901631,1), (911871,3), (923135,5), (929279,1), (944639,2), (958463,1), (970239,3), (978943,4), (989183,5), (998911,2), (1008639,4), (1025535,1), (1031679,5), (1046527,2), (1054719,1), (1068031,4), (1079807,0), (1085439,4), (1099263,1), (1112575,3), (1120255,2), (1128959,1), (1135615,3), (1160191,0), (1166335,1), (1181695,1), (1188863,5), (1197567,1), (1203711,5), (1212415,3), (1223167,5), (1232895,2), (1239039,2), (1247231,1), (1254399,4), (1262079,1), (1272831,1), (1279999,5), (1287167,3), (1302015,3), (1309695,5), (1338367,4), (1345535,3), (1371647,1), (1378815,5), (1387519,3), (1394175,3), (1402879,2), (1411583,5), (1423359,3), (1429503,5)),
9 -> Vector((11263,5), (23039,1), (38911,5), (46591,0), (53247,0), (71167,2), (83455,2), (94207,2), (99839,0), (106495,1), (112639,1), (124415,1), (132607,1), (146431,3), (158719,1), (165887,0), (174591,5), (193535,4), (204799,1), (216575,2), (223743,4), (240127,1), (248319,1), (254463,2), (264703,5), (275967,2), (287743,5), (296447,0), (307199,3), (317951,5), (326655,2), (332799,4), (338943,3), (363007,3), (368639,0), (374271,4), (382975,1), (396287,5), (406015,5), (425471,4), (434687,2), (445439,5), (451583,5), (457727,2), (464895,2), (480767,5), (486911,3), (496127,4), (502271,2), (509439,1), (515583,1)),
10 -> Vector((8703,4), (16895,1), (24575,0), (36351,0), (46079,2), (54783,2), (62975,0), (75775,3), (88063,2), (96255,0), (101887,0), (114687,5), (125439,5), (137727,1), (144383,4), (154111,3), (160767,5), (176639,3), (186367,2), (193023,2), (208383,4), (224255,1), (234495,5), (243711,2), (255487,2), (265727,2), (272895,1), (281599,1), (293375,2), (303103,3), (310783,2), (317439,4), (323071,4), (330751,4), (340991,4), (352767,1), (361471,1), (367103,0), (376319,3), (385535,5), (395775,1), (403967,2), (410623,0), (416255,5), (429055,1), (436735,0), (442367,1), (453631,2), (459775,2), (472063,3), (479743,4), (489471,3), (495103,1), (506879,0), (516607,1), (529407,0), (539647,3), (556543,3), (567295,0)),
11 -> Vector((6655,0), (14335,3), (22015,0), (29695,0), (36351,0), (44031,2), (56831,1), (62975,3), (74751,5), (89087,4), (97791,3), (103935,3), (116735,3), (126463,5), (133631,5), (140287,0), (149503,5), (165375,0), (176639,5), (184831,1), (196095,3), (202751,2), (214527,1), (222719,2), (234495,4), (240639,5), (246271,2), (258047,4), (270847,1), (279551,1), (286207,1), (292863,1), (308735,0), (320511,5), (332287,0), (338943,1), (346623,1), (357887,1), (368127,0), (374783,5), (388095,5), (394751,3), (403455,3), (410623,5), (428031,3), (436735,3), (455167,3), (465407,0), (472063,0), (477695,5), (484863,5), (493567,4), (499711,2), (510975,3), (523263,4), (533503,1), (546303,2), (565247,3), (570879,0), (587263,4), (594943,5), (605695,2), (616447,5), (627199,1), (636415,1), (645631,4), (652287,5), (662015,3), (675327,0), (683519,2), (693247,4), (700927,0), (709631,4), (722431,3), (732671,4), (740863,0), (751103,1), (758783,3), (771071,4), (781311,3), (788991,3), (797695,2), (807935,3), (813567,1), (821247,1), (832511,5), (848383,4), (864767,4), (875007,5), (880639,2), (887807,2), (899071,5), (912383,3), (922111,2), (932351,4), (941567,0), (959999,1), (969215,1), (976895,1), (1004543,2), (1012735,3), (1022463,4), (1036287,4), (1046015,0), (1057279,1), (1064959,0), (1072127,0), (1086975,2), (1093119,4), (1106943,5), (1120767,0), (1142271,4), (1149951,3), (1156095,0), (1163263,1), (1175039,0), (1183743,0), (1195519,1), (1211391,5), (1225215,0), (1236479,5), (1242111,2), (1264127,1), (1271295,3), (1289215,5), (1305599,0), (1311231,3), (1324031,1), (1337855,5), (1380863,1), (1388543,1), (1394175,4), (1433087,3), (1441791,0), (1464831,0), (1479167,0), (1498111,4), (1510911,5), (1521663,0), (1534975,2), (1551871,1), (1569791,3), (1592319,3), (1602559,2), (1614335,5)),
12 -> Vector((7167,0), (20479,4), (28159,0), (37887,5), (49663,0), (57855,3), (82943,0), (92159,2), (98815,0), (116223,3), (126975,1), (133119,3), (143359,0), (156159,4), (165375,3), (171519,2), (206335,0), (228863,1), (250367,0), (258559,5), (268287,2), (278527,5), (307199,5), (318463,3), (338431,3), (357887,4), (365567,5), (387583,4), (400895,0), (406527,1), (417791,5), (433151,0), (444415,3), (470527,2), (489471,3), (495615,5), (525311,1), (558079,2), (565247,2), (571391,5), (578047,0), (592383,0), (603135,4), (611839,1), (626687,2), (632319,0), (647167,3), (653823,4), (660479,0), (667647,3), (673791,5), (680447,1), (691199,3), (699903,1), (705535,0), (726015,5), (753151,5), (781823,0), (790015,0), (798207,0), (808447,1), (818175,1), (836095,0), (852479,5), (861183,0), (866815,5), (881663,0), (896511,1), (904191,1), (915455,1), (949247,0), (955903,0), (970751,2), (984575,3), (1004543,1), (1016831,2), (1022463,0), (1034751,5), (1051647,0), (1061887,5), (1072639,1), (1079807,1), (1098239,5), (1116671,2), (1141759,3), (1167871,2), (1183231,3), (1214463,4), (1223167,2), (1234943,1), (1242111,5), (1256959,2), (1271807,0), (1284095,2), (1298431,3), (1311743,3), (1333759,2), (1355263,3), (1378815,0), (1404927,0), (1419775,0), (1448447,0), (1460223,3), (1529855,0), (1542655,0), (1605119,0), (1634303,1), (1657855,1), (1667583,0), (1688063,0), (1717247,1), (1727487,4), (1757695,3), (1802239,5), (1839103,0), (1880063,0), (1913343,1), (1935359,3), (1949695,1), (1959935,0), (1989631,3), (2006015,3), (2015743,1), (2036735,1), (2087935,2), (2130943,3), (2167807,1), (2223615,3), (2253823,2), (2270719,0), (2311679,3)),
13 -> Vector((10751,3), (46591,0), (123391,0), (133631,0), (141311,0), (185343,3), (203775,2), (216063,2), (243711,0), (249343,5), (264191,0), (275967,2), (281599,0), (303103,0), (310783,2), (341503,0), (349695,1), (357375,4), (411135,0), (421375,0), (442879,1), (449023,0), (463871,4), (501247,5), (517631,0), (571903,5), (609791,5), (676351,0), (687103,0), (699391,1), (722431,1), (728063,0), (740351,0), (791551,0), (821247,1), (841215,1), (893439,5), (902143,0)),
14 -> Vector((132607,3), (148479,3), (163327,0), (168959,0), (458239,2), (507391,5), (527871,0), (543743,3), (552447,0), (587775,0), (617471,0), (656383,0), (679935,0), (695295,4), (733183,2), (740351,3), (751615,1), (774143,2), (790015,0), (811519,0), (830463,0), (857599,1), (941567,2), (1002495,1), (1013759,1), (1019903,1), (1035775,3), (1133567,2), (1158143,0), (1189887,4), (1196543,2), (1225215,0), (1249279,3), (1267199,3), (1280511,0), (1287167,3), (1364991,0), (1371647,0), (1380351,0), (1418239,1), (1440255,0), (1450495,0), (1488895,1), (1543679,1), (1564671,3), (1631231,0), (1656831,5), (1684991,2), (1691647,0), (1699839,4), (1736703,3), (1754623,5), (1787391,5), (1842687,0), (1853951,2), (1859583,0), (1874431,0), (1881087,0), (1889791,1), (1899519,0), (1948159,3), (1956863,0), (1964543,0), (1972735,0), (1981439,3), (1989631,2), (1997823,3), (2006015,3), (2014719,1), (2022911,5), (2032127,4), (2040831,3), (2063359,1), (2068991,4), (2079743,5), (2095103,3), (2106367,4), (2114559,2), (2121727,4), (2129407,3), (2137599,2), (2145279,3), (2152447,3), (2163711,0), (2178559,3), (2187263,2)),
15 -> Vector((6655,2), (13311,2), (25599,5), (36351,5), (46079,5), (55295,5), (79871,5), (91135,5), (99839,5), (114687,5), (129535,5)),
16 -> Vector((17407,4), (61439,4), (69631,1), (83967,5), (120319,1), (134655,3), (153087,5), (172543,1), (187903,0), (202239,0), (208383,2), (233471,4), (267775,1), (278015,5), (293375,4), (321535,4), (332799,1), (340479,1), (347135,1), (374271,4), (387583,1), (403967,1), (431615,1), (464383,2), (488447,3), (501759,1), (521727,2), (531455,0), (538623,1), (549375,5), (569855,1), (575487,0), (596479,0), (609279,1), (622079,1), (636927,2), (653823,2), (666623,3), (673791,0), (681471,4), (689663,5), (695807,3), (724991,1), (743423,1), (753663,1), (817151,4), (828415,1), (836095,0)),
17 -> Vector((25087,5), (45567,5), (66047,1), (93695,1), (108543,0), (120831,4), (132607,5), (190463,0), (208383,5), (218623,0), (237055,5), (259583,0), (269823,1), (290303,5), (355327,3), (378367,1), (388607,5), (398335,2), (413695,0), (428543,5), (439295,5), (444927,1), (468991,3), (481791,1), (488959,0), (510463,3), (521215,3), (529407,5), (543231,5), (549887,0), (555519,5), (563711,3), (577535,4), (589823,5), (596479,1), (617983,1), (635903,2), (647679,2), (653311,3), (670719,5), (676351,2), (692735,0)),
18 -> Vector((20991,1), (31231,5), (48639,2), (63999,5), (90111,1), (95743,4), (120831,5), (189439,5), (196095,5), (206335,1), (223743,5), (250879,5), (322559,1), (331775,1), (343039,0), (350719,1), (364031,1), (371199,2), (376831,1), (388095,0), (396287,0), (402943,3), (416255,4), (432127,2), (438271,4), (443903,3), (455679,5), (465919,1), (478207,1), (488447,5), (495103,5), (503295,3), (509951,3), (516095,5), (523775,3), (529407,3), (536575,5), (543743,5), (551423,1), (560639,3), (568831,5), (577023,5), (600575,5), (608767,5), (622079,5), (645119,1), (655871,1), (662015,5), (668671,5), (677887,1), (691711,1), (703487,0), (712703,5), (727039,5), (739839,5), (812031,5), (834047,4), (842239,4), (862207,5), (882687,5), (888319,5), (915967,0), (945151,1), (951295,1)),
19 -> Vector((22527,0), (28159,4), (60927,2), (73727,5), (112639,0), (164351,5), (201215,5), (244223,4), (258047,3), (269311,0), (277503,1), (287231,1), (312319,5)),
20 -> Vector((12287,0), (25087,2), (41471,5), (94719,3), (100863,0), (107519,2), (113151,3), (126463,0), (141823,5))
)

// onsets.toList.sortBy(_._1).map(_._2).map(_.count(_._2 > 1 ))

// val lengths = ids.map( id => AudioFile.readSpec( markName( id )).numFrames )
// ids.zip(lengths).toMap
val lenMap = Map((10,577004), (14,2196948), (20,166823), (1,131776), (6,382753), (9,524715), (13,941384), (2,119832), (17,692913), (12,2384100), (7,771967), (3,315556), (18,952278), (16,841111), (11,1650974), (8,1436805), (19,322820), (4,260235), (15,135409))

case class Hit( strength: Int, file: Int, start: Long, stop: Long )

val hits: Map[ Int, Seq[ Hit ]] = onsets.map { case (file, marks) =>
   val seq = marks :+ (lenMap( file ).toInt, -1)
   val hits = seq.sliding( 2, 1 ).toSeq.map({ case Seq( (start, strength), (stop, _ )) =>
      Hit( strength, file, start, stop )
   })
   file -> hits
}

val filtered: Map[ Int, IndexedSeq[ Hit ]] = hits.map { case (file, hits) =>
   val secs     = lenMap( file ) / 44100.0
   val maxMarks = (2.0 * secs + 0.5).toInt
   var i = 0
   var res = hits.toIndexedSeq
   while( i < 5 && res.size > maxMarks ) {
      res = res.filter( _.strength > i )
   i += 1 }
   file -> res
}

val flat = filtered.values.flatten
val byStrength = flat.groupBy( _.strength )
val s5 = byStrength(5).toIndexedSeq.sortBy( (hit: Hit) => hit.file ) // something's weird here with scalac
val hitsSorted = flat.toIndexedSeq.sortWith( (a, b) => if( a.strength == b.strength ) a.file < b.file else a.strength < b.strength )

def edName( id: Int ) : String = "/Users/hhrutz/Desktop/new_projects/Lighthouse/source_sounds/lighthouse" + id + "ed.aif"

def genHit( path: String, hit: Hit ) {
   val afIn  = AudioFile.openRead( edName( hit.file ))
   val afOut = AudioFile.openWrite( path, afIn.spec.copy( fileType = AudioFileType.AIFF, sampleFormat = SampleFormat.Int24 ))
   val numFrames = (hit.stop - hit.start).toInt - 512
   val buf   = afIn.frameBuffer( numFrames )

   def line( buf: Array[Array[Float]], off: Int, len: Int, w1: Float, w2: Float ) {
      buf.foreach { chan =>
         for( j <- 0 until len ) {
            val w = j.toDouble / len
            val f = ((1.0 - w) * w1 + w * w2).toFloat
            chan( j + off ) *= f
         }
      }
   }

   afIn.seekFrame( hit.start - 512 )
   afIn.readFrames( buf )
   afIn.close
   line( buf, 0, 88, 0f, 1f )
   line( buf, 88, numFrames - 88, 1f, 0f )
   afOut.writeFrames( buf )
   afOut.close
}

// s5.zipWithIndex.foreach { case (hit, idx) => genHit( "/Users/hhrutz/Desktop/new_projects/Lighthouse/audio_work/Hit5-" + (idx+1) + ".aif", hit )}
// hitsSorted.zipWithIndex.foreach { case (hit, idx) => genHit( "/Users/hhrutz/Desktop/new_projects/Lighthouse/audio_work/Hit" + (idx+1) + ".aif", hit )}

byStrength.foreach { case (strength, list) =>
   list.groupBy( (h: Hit) => h.file ).foreach { case (file, list) =>
      list.toIndexedSeq.sortBy( (h: Hit) => h.start ).zipWithIndex.foreach { case (hit, idx) => 
         genHit( "/Users/hhrutz/Desktop/new_projects/Lighthouse/audio_work/Hit" + strength + "_" + file + "_" + (idx+1) + ".aif", hit )
      }
   }
}
